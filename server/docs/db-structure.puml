@startuml;
title "Database Structure"

class Newsletter << (T,#BDDBFE) Table >> {
	ID : uint
	Email : string "uniqueIndex"
	Name : string
	CreatedAt : time.Time
}

class Mail << (T,#BDDBFE) Table >> {
  ID : uint
	To : string
	Message : struct {
	\tSubject : string
	\tHtml : string
	} "serializer:json"
	State : string
	Error : string | null
	CreatedAt : time.Time
}

class Chain << (T,#BDDBFE) Table >> {
  -- gorm.Model --
	ID : uint "primarykey"
  CreatedAt : time.Time
  UpdatedAt : time.Time
  DeletedAt : DeletedAt "index"
  --
	UID : string "uniqueIndex"
	Name : string
	Description : string
	Address : string
	Latitude : float32
	Longitude : float32
	Radius : float32
	Categories : []CategoriesLL "foreignKey:ChainID"
	Sizes : []ChainSize       "foreignKey:ChainID"
	Users : []UserChainLL  "foreignKey:ChainID"
	Published : bool
	OpenToNewMembers : bool
}

enum CategoryEnum {
  CategoryEnumChildren = "1"
	CategoryEnumWomen    = "2"
	CategoryEnumMen      = "3"
}

enum SizeEnum {
  SizeEnumBaby          = "1"
	SizeEnum1_4YearsOld   = "2"
	SizeEnum5_12YearsOld  = "3"
	SizeEnumWomenSmall    = "4"
	SizeEnumWomenMedium   = "5"
	SizeEnumWomenLarge    = "6"
	SizeEnumWomenPlusSize = "7"
	SizeEnumMenSmall      = "8"
	SizeEnumMenMedium     = "9"
	SizeEnumMenLarge      = "A"
	SizeEnumMenPlusSize   = "B"
}

class CategoriesLL << (T,#BDDBFE) Table >> {
	ID : uint
	ChainID : uint
	CategoryEnum : string
}

class ChainSize << (T,#BDDBFE) Table >> {
	ID : uint
	ChainID : uint
	SizeEnum : string
}


class User << (T,#BDDBFE) Table >> {
  -- gorm.Model --
	ID : uint "primarykey"
  CreatedAt : time.Time
  UpdatedAt : time.Time
  DeletedAt : DeletedAt "index"
  --
	UID : string "uniqueIndex"
	Email : string
	EmailVerified : bool
	Chains : []UserChainLL "foreignKey:UserID"
	Role : int
	Name : string
	PhoneNumber : string
	InterestedSizes : []string "serializer:json"
	Address : string
	UserToken : []UserToken "foreignKey:UserID"
	Enabled : bool        "index"
}

enum RoleEnum {
	RoleUser       = 1
	RoleChainAdmin = 2
	RoleAdmin      = 3
}

class UserToken << (T,#BDDBFE) Table >> {
	ID : uint
	UID : string "uniqueIndex"
	UserID : uint
	CreatedAt : time.Time
}

class UserChainLL << (T,#BDDBFE) Table >> {
	ID : uint
	UserID : uint
	ChainID : uint
}


CategoriesLL --> Chain
CategoriesLL --> CategoryEnum

ChainSize --> SizeEnum
ChainSize --> Chain


UserChainLL --> User
UserChainLL --> Chain

Newsletter --> "Email?" User

User --> "Role" RoleEnum
UserToken --> User


@enduml;